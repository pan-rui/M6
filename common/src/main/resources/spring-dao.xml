<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd


        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx-4.0.xsd"
       default-autowire="byName">
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:db.properties"/>
        <!--<property name="location" value="file:${user.dir}/db.properties"/>-->
    </bean>
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"> 
        <property name="driverClassName" value="${db.driver}"/>
        <property name="url" value="${db.url}"/>
        <property name="username" value="${db.username}"/>
        <property name="password" value="${db.password}"/>
        <!--注意filter顺序，wall,stat：拦截检测的时间不包含在stat中，反之包含-->
        <property name="filters" value="wall,stat"/>
        <property name="maxActive" value="${db.maxActive}"/>
        <property name="initialSize" value="${db.initialSize}"/>
        <property name="maxWait">
            <value>${db.maxWait}</value>
        </property>
        <property name="minIdle">
            <value>${db.minIdle}</value>
        </property>
        <property name="timeBetweenEvictionRunsMillis">
            <value>${db.timeBetweenEvictionRunsMillis}</value>
        </property>
        <property name="minEvictableIdleTimeMillis">
            <value>${db.minEvictableIdleTimeMillis}</value>
        </property>
        <property name="validationQuery">
            <value>${db.validationQuery}</value>
        </property>
        <property name="testWhileIdle">
            <value>true</value>
        </property>
        <property name="testOnBorrow">
            <value>true</value>
        </property>
        <property name="testOnReturn">
            <value>false</value>
        </property>
        <property name="poolPreparedStatements">
            <value>true</value>
        </property>
        <property name="maxOpenPreparedStatements">
            <value>${db.maxOpenPreparedStatements}</value>
        </property>
        <!--连接泄露,如果配置了webfilter，查看JdbcPoolConnectionOpenCount和JdbcPoolConnectionCloseCount属性，如果不相等，就是泄漏了-->
        <!-- 打开removeAbandoned功能 -->
        <!--<property name="removeAbandoned" value="true" />--> 
        <!-- 1800秒，也就是30分钟 -->
        <!--<property name="removeAbandonedTimeout" value="1800" />-->
        <!-- 关闭abanded连接时输出错误日志 -->
        <!--<property name="logAbandoned" value="true" />-->
    </bean>
    <!--统计监控过滤器-->
<!--    <bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
        记录慢sql
        <property name="slowSqlMillis" value="2000" />
        <property name="logSlowSql" value="true" />
        允许sql合并
        <property name="mergeSql" value="true" />
    </bean>-->
    <!--防sql注入过滤器-->
    <!--<bean id="wall-filter-config" class="com.alibaba.druid.wall.WallConfig" init-method="init">-->
        <!-- 指定配置装载的目录  -->
        <!--<property name="dir" value="META-INF/druid/wall/mysql" />-->
    <!--</bean>-->
<!--    <bean id="wall-filter" class="com.alibaba.druid.wall.WallFilter">
        <property name="dbType" value="mysql" />
        <property name="config" ref="wall-filter-config" />
    </bean>-->
    <!--data source-->
    
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="find*" read-only="true"/>
            <tx:method name="search*" read-only="true"/>
            <tx:method name="load*" read-only="true"/>
            <tx:method name="query*" read-only="true"/>
            <tx:method name="count*" read-only="true"/>
            <!--<tx:method name="is*" read-only="true"/>-->
            <tx:method name="has*" read-only="true" />
            <tx:method name="get*" read-only="true"/>
            <tx:method name="*" read-only="false"
                       rollback-for="java.lang.Exception,java.lang.RuntimeException"/>
        </tx:attributes>
    </tx:advice>
    
    <aop:config>
        <aop:pointcut id="defaultServicePointCut" expression="(execution(* *..*Service*.*(..)))" />
        <aop:advisor pointcut-ref="defaultServicePointCut" advice-ref="txAdvice" />
    </aop:config>

<!--    <aop:config>
    </aop:config>-->


</beans>
