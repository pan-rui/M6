<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.0.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
       default-autowire="byName">
    <!--<context:component-scan base-package="com.yanguan.device.util,com.yanguan.device.dao,com.yanguan.device.service,com.yanguan.device.cmd,com.yanguan.device.handle,com.yanguan.device.nio"/>-->
    <context:component-scan base-package="com.yanguan.device"/>
    <context:annotation-config />
    <util:properties id="config" location="classpath:config/server.properties"/>
    <!--<util:properties id="config" location="file:${user.dir}/server.properties"/>-->
    <bean id="messageSource"
          class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>config.message</value>
            </list>
        </property>
    </bean>
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="#{config['db.driver']}"/>
        <property name="url" value="#{config['db.url']}"/>
        <property name="username" value="#{config['db.username']}"/>
        <property name="password" value="#{config['db.password']}"/>
        <!--注意filter顺序，wall,stat：拦截检测的时间不包含在stat中，反之包含-->
        <property name="filters" value="wall,stat"/>
        <property name="maxActive" value="#{config['db.maxActive']}"/>
        <property name="initialSize" value="#{config['db.initialSize']}"/>
        <property name="maxWait" value="#{config['db.maxWait']}" />
        <property name="minIdle" value="#{config['db.minIdle']}" />
        <property name="timeBetweenEvictionRunsMillis" value="#{config['db.timeBetweenEvictionRunsMillis']}" />
        <property name="minEvictableIdleTimeMillis"  value="#{config['db.minEvictableIdleTimeMillis']}"/>
        <property name="validationQuery" value="#{config['db.validationQuery']}" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow">
            <value>true</value>
        </property>
        <property name="testOnReturn">
            <value>false</value>
        </property>
        <property name="poolPreparedStatements">
            <value>true</value>
        </property>
        <property name="maxOpenPreparedStatements" value="#{config['db.maxOpenPreparedStatements']}" />
        <!--连接泄露,如果配置了webfilter，查看JdbcPoolConnectionOpenCount和JdbcPoolConnectionCloseCount属性，如果不相等，就是泄漏了-->
        <!-- 打开removeAbandoned功能 -->
        <!--<property name="removeAbandoned" value="true" />-->
        <!-- 1800秒，也就是30分钟 -->
        <!--<property name="removeAbandonedTimeout" value="1800" />-->
        <!-- 关闭abanded连接时输出错误日志 -->
        <!--<property name="logAbandoned" value="true" />-->
    </bean>

    <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--<property name="configLocation" value="classpath:configuration.xml"/>-->
        <property name="dataSource" ref="dataSource" />
        <!--<property name="typeAliasesPackage" value="com.yanguan.device.model" />-->
        <property  name="mapperLocations"  value="classpath*:mapping/*.xml"/>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.yanguan.device.dao" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryBean"/>
    </bean>
    <!--cache setting-->
<!--    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="${cache.maxTotal}"></property>
        <property name="maxIdle" value="${cache.maxIdle}"></property>
        <property name="maxWaitMillis" value="${cache.maxWaitMillis}"></property>
        <property name="minEvictableIdleTimeMillis" value="${cache.minEvictableIdleTimeMillis}"></property>
        <property name="numTestsPerEvictionRun" value="3"></property>
        <property name="timeBetweenEvictionRunsMillis" value="60000"></property>
    </bean>
    <bean id="jedisConnectionFactory"
          class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
          destroy-method="destroy">
        <property name="poolConfig" ref="jedisPoolConfig"></property>
        <property name="hostName" value="${cache.host}"></property>
        <property name="port" value="${cache.port}"></property>
        <property name="password" value="${cache.password}"></property>
        <property name="timeout" value="15000"></property>
        <property name="usePool" value="true"></property>
    </bean>
    <bean id="jedisPool" class="redis.clients.jedis.JedisPool" c:poolConfig-ref="jedisPoolConfig"
          c:host="${cache.host}" c:password="${cache.password}" c:port="${cache.port}" c:timeout="15000"/>-->

</beans>